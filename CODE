import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
np.random.seed(42)
num_samples = 100
square_footage = np.random.randint(1000, 3000, num_samples)
num_bedrooms = np.random.randint(2, 5, num_samples)
num_bathrooms = np.random.randint(1, 4, num_samples)
prices = 50000 + 300 * square_footage + 20000 * num_bedrooms + 15000 * num_bathrooms + np.random.normal(0, 10000, num_samples)
data = pd.DataFrame({'SquareFootage': square_footage, 'Bedrooms': num_bedrooms, 'Bathrooms': num_bathrooms, 'Price': prices})

X = data[['SquareFootage', 'Bedrooms', 'Bathrooms']]
y = data['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LinearRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
print(f'Mean Squared Error: {mse}')
plt.scatter(y_test, y_pred)
plt.xlabel('Actual Prices')
plt.ylabel('Predicted Prices')
plt.title('Actual Prices vs. Predicted Prices')
plt.show()
